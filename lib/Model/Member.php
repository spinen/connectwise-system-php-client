<?php
/**
 * Member
 *
 * PHP version 5
 *
 * @category Class
 * @package  Spinen\ConnectWise\Clients\System
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * System API
 *
 * ConnectWise System API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: platform@connectwise.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model;

use \ArrayAccess;

/**
 * Member Class Doc Comment
 *
 * @category    Class */
/**
 * @package     Spinen\ConnectWise\Clients\System
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Member implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Member';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'admin_flag' => 'bool',
        'allow_expenses_entered_against_companies_flag' => 'bool',
        'allow_in_cell_entry_on_time_sheet' => 'bool',
        'billable_forecast' => 'double',
        'calendar' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\CalendarReference',
        'calendar_sync_integration_flag' => 'bool',
        'country' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\CountryReference',
        'daily_capacity' => 'double',
        'days_tolerance' => 'int',
        'default_department_id' => 'int',
        'default_email' => 'string',
        'default_location_id' => 'int',
        'default_phone' => 'string',
        'disable_online_flag' => 'bool',
        'enable_ldap_authentication_flag' => 'bool',
        'enable_mobile_flag' => 'bool',
        'enable_mobile_gps_flag' => 'bool',
        'enter_time_against_company_flag' => 'bool',
        'expense_approver' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberReference',
        'first_name' => 'string',
        'hide_member_in_dispatch_portal_flag' => 'bool',
        'hire_date' => '\DateTime',
        'home_email' => 'string',
        'home_extension' => 'string',
        'home_phone' => 'string',
        'hourly_cost' => 'double',
        'hourly_rate' => 'double',
        'id' => 'int',
        'identifier' => 'string',
        'inactive_date' => '\DateTime',
        'inactive_flag' => 'bool',
        'include_in_utilization_reporting_flag' => 'bool',
        'last_login' => 'string',
        'last_name' => 'string',
        'license_class' => 'string',
        'mapi_name' => 'string',
        'middle_initial' => 'string',
        'minimum_hours' => 'double',
        'mobile_email' => 'string',
        'mobile_extension' => 'string',
        'mobile_phone' => 'string',
        'notes' => 'string',
        'office_email' => 'string',
        'office_extension' => 'string',
        'office_phone' => 'string',
        'project_default_board' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\ProjectBoardReference',
        'project_default_department_id' => 'int',
        'project_default_location_id' => 'int',
        'reports_to' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberReference',
        'require_expense_entry_flag' => 'bool',
        'require_start_and_end_time_on_time_entry_flag' => 'bool',
        'require_time_sheet_entry_flag' => 'bool',
        'restrict_default_sales_territory_flag' => 'bool',
        'restrict_default_warehouse_bin_flag' => 'bool',
        'restrict_default_warehouse_flag' => 'bool',
        'restrict_department_flag' => 'bool',
        'restrict_location_flag' => 'bool',
        'restrict_project_default_department_flag' => 'bool',
        'restrict_project_default_location_flag' => 'bool',
        'restrict_schedule_flag' => 'bool',
        'restrict_service_default_department_flag' => 'bool',
        'restrict_service_default_location_flag' => 'bool',
        'sales_default_location_id' => 'int',
        'schedule_capacity' => 'double',
        'schedule_default_department_id' => 'int',
        'schedule_default_location_id' => 'int',
        'security_level' => 'string',
        'security_location_id' => 'int',
        'security_role' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\SecurityRoleReference',
        'service_default_board' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\BoardReference',
        'service_default_department_id' => 'int',
        'service_default_location_id' => 'int',
        'service_location' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\ServiceLocationReference',
        'service_teams' => 'int[]',
        'time_approver' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberReference',
        'time_reminder_email_flag' => 'bool',
        'time_sheet_start_date' => '\DateTime',
        'time_zone' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\TimeZoneReference',
        'title' => 'string',
        'type' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberTypeReference',
        'vendor_number' => 'string',
        'warehouse' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WarehouseReference',
        'warehouse_bin' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WarehouseBinReference',
        'work_role' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WorkRoleReference',
        'work_type' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WorkTypeReference',
        '_info' => '\Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\Metadata',
        'system_flag' => 'bool'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'admin_flag' => 'adminFlag',
        'allow_expenses_entered_against_companies_flag' => 'allowExpensesEnteredAgainstCompaniesFlag',
        'allow_in_cell_entry_on_time_sheet' => 'allowInCellEntryOnTimeSheet',
        'billable_forecast' => 'billableForecast',
        'calendar' => 'calendar',
        'calendar_sync_integration_flag' => 'calendarSyncIntegrationFlag',
        'country' => 'country',
        'daily_capacity' => 'dailyCapacity',
        'days_tolerance' => 'daysTolerance',
        'default_department_id' => 'defaultDepartmentId',
        'default_email' => 'defaultEmail',
        'default_location_id' => 'defaultLocationId',
        'default_phone' => 'defaultPhone',
        'disable_online_flag' => 'disableOnlineFlag',
        'enable_ldap_authentication_flag' => 'enableLdapAuthenticationFlag',
        'enable_mobile_flag' => 'enableMobileFlag',
        'enable_mobile_gps_flag' => 'enableMobileGpsFlag',
        'enter_time_against_company_flag' => 'enterTimeAgainstCompanyFlag',
        'expense_approver' => 'expenseApprover',
        'first_name' => 'firstName',
        'hide_member_in_dispatch_portal_flag' => 'hideMemberInDispatchPortalFlag',
        'hire_date' => 'hireDate',
        'home_email' => 'homeEmail',
        'home_extension' => 'homeExtension',
        'home_phone' => 'homePhone',
        'hourly_cost' => 'hourlyCost',
        'hourly_rate' => 'hourlyRate',
        'id' => 'id',
        'identifier' => 'identifier',
        'inactive_date' => 'inactiveDate',
        'inactive_flag' => 'inactiveFlag',
        'include_in_utilization_reporting_flag' => 'includeInUtilizationReportingFlag',
        'last_login' => 'lastLogin',
        'last_name' => 'lastName',
        'license_class' => 'licenseClass',
        'mapi_name' => 'mapiName',
        'middle_initial' => 'middleInitial',
        'minimum_hours' => 'minimumHours',
        'mobile_email' => 'mobileEmail',
        'mobile_extension' => 'mobileExtension',
        'mobile_phone' => 'mobilePhone',
        'notes' => 'notes',
        'office_email' => 'officeEmail',
        'office_extension' => 'officeExtension',
        'office_phone' => 'officePhone',
        'project_default_board' => 'projectDefaultBoard',
        'project_default_department_id' => 'projectDefaultDepartmentId',
        'project_default_location_id' => 'projectDefaultLocationId',
        'reports_to' => 'reportsTo',
        'require_expense_entry_flag' => 'requireExpenseEntryFlag',
        'require_start_and_end_time_on_time_entry_flag' => 'requireStartAndEndTimeOnTimeEntryFlag',
        'require_time_sheet_entry_flag' => 'requireTimeSheetEntryFlag',
        'restrict_default_sales_territory_flag' => 'restrictDefaultSalesTerritoryFlag',
        'restrict_default_warehouse_bin_flag' => 'restrictDefaultWarehouseBinFlag',
        'restrict_default_warehouse_flag' => 'restrictDefaultWarehouseFlag',
        'restrict_department_flag' => 'restrictDepartmentFlag',
        'restrict_location_flag' => 'restrictLocationFlag',
        'restrict_project_default_department_flag' => 'restrictProjectDefaultDepartmentFlag',
        'restrict_project_default_location_flag' => 'restrictProjectDefaultLocationFlag',
        'restrict_schedule_flag' => 'restrictScheduleFlag',
        'restrict_service_default_department_flag' => 'restrictServiceDefaultDepartmentFlag',
        'restrict_service_default_location_flag' => 'restrictServiceDefaultLocationFlag',
        'sales_default_location_id' => 'salesDefaultLocationId',
        'schedule_capacity' => 'scheduleCapacity',
        'schedule_default_department_id' => 'scheduleDefaultDepartmentId',
        'schedule_default_location_id' => 'scheduleDefaultLocationId',
        'security_level' => 'securityLevel',
        'security_location_id' => 'securityLocationId',
        'security_role' => 'securityRole',
        'service_default_board' => 'serviceDefaultBoard',
        'service_default_department_id' => 'serviceDefaultDepartmentId',
        'service_default_location_id' => 'serviceDefaultLocationId',
        'service_location' => 'serviceLocation',
        'service_teams' => 'serviceTeams',
        'time_approver' => 'timeApprover',
        'time_reminder_email_flag' => 'timeReminderEmailFlag',
        'time_sheet_start_date' => 'timeSheetStartDate',
        'time_zone' => 'timeZone',
        'title' => 'title',
        'type' => 'type',
        'vendor_number' => 'vendorNumber',
        'warehouse' => 'warehouse',
        'warehouse_bin' => 'warehouseBin',
        'work_role' => 'workRole',
        'work_type' => 'workType',
        '_info' => '_info',
        'system_flag' => 'System_Flag'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'admin_flag' => 'setAdminFlag',
        'allow_expenses_entered_against_companies_flag' => 'setAllowExpensesEnteredAgainstCompaniesFlag',
        'allow_in_cell_entry_on_time_sheet' => 'setAllowInCellEntryOnTimeSheet',
        'billable_forecast' => 'setBillableForecast',
        'calendar' => 'setCalendar',
        'calendar_sync_integration_flag' => 'setCalendarSyncIntegrationFlag',
        'country' => 'setCountry',
        'daily_capacity' => 'setDailyCapacity',
        'days_tolerance' => 'setDaysTolerance',
        'default_department_id' => 'setDefaultDepartmentId',
        'default_email' => 'setDefaultEmail',
        'default_location_id' => 'setDefaultLocationId',
        'default_phone' => 'setDefaultPhone',
        'disable_online_flag' => 'setDisableOnlineFlag',
        'enable_ldap_authentication_flag' => 'setEnableLdapAuthenticationFlag',
        'enable_mobile_flag' => 'setEnableMobileFlag',
        'enable_mobile_gps_flag' => 'setEnableMobileGpsFlag',
        'enter_time_against_company_flag' => 'setEnterTimeAgainstCompanyFlag',
        'expense_approver' => 'setExpenseApprover',
        'first_name' => 'setFirstName',
        'hide_member_in_dispatch_portal_flag' => 'setHideMemberInDispatchPortalFlag',
        'hire_date' => 'setHireDate',
        'home_email' => 'setHomeEmail',
        'home_extension' => 'setHomeExtension',
        'home_phone' => 'setHomePhone',
        'hourly_cost' => 'setHourlyCost',
        'hourly_rate' => 'setHourlyRate',
        'id' => 'setId',
        'identifier' => 'setIdentifier',
        'inactive_date' => 'setInactiveDate',
        'inactive_flag' => 'setInactiveFlag',
        'include_in_utilization_reporting_flag' => 'setIncludeInUtilizationReportingFlag',
        'last_login' => 'setLastLogin',
        'last_name' => 'setLastName',
        'license_class' => 'setLicenseClass',
        'mapi_name' => 'setMapiName',
        'middle_initial' => 'setMiddleInitial',
        'minimum_hours' => 'setMinimumHours',
        'mobile_email' => 'setMobileEmail',
        'mobile_extension' => 'setMobileExtension',
        'mobile_phone' => 'setMobilePhone',
        'notes' => 'setNotes',
        'office_email' => 'setOfficeEmail',
        'office_extension' => 'setOfficeExtension',
        'office_phone' => 'setOfficePhone',
        'project_default_board' => 'setProjectDefaultBoard',
        'project_default_department_id' => 'setProjectDefaultDepartmentId',
        'project_default_location_id' => 'setProjectDefaultLocationId',
        'reports_to' => 'setReportsTo',
        'require_expense_entry_flag' => 'setRequireExpenseEntryFlag',
        'require_start_and_end_time_on_time_entry_flag' => 'setRequireStartAndEndTimeOnTimeEntryFlag',
        'require_time_sheet_entry_flag' => 'setRequireTimeSheetEntryFlag',
        'restrict_default_sales_territory_flag' => 'setRestrictDefaultSalesTerritoryFlag',
        'restrict_default_warehouse_bin_flag' => 'setRestrictDefaultWarehouseBinFlag',
        'restrict_default_warehouse_flag' => 'setRestrictDefaultWarehouseFlag',
        'restrict_department_flag' => 'setRestrictDepartmentFlag',
        'restrict_location_flag' => 'setRestrictLocationFlag',
        'restrict_project_default_department_flag' => 'setRestrictProjectDefaultDepartmentFlag',
        'restrict_project_default_location_flag' => 'setRestrictProjectDefaultLocationFlag',
        'restrict_schedule_flag' => 'setRestrictScheduleFlag',
        'restrict_service_default_department_flag' => 'setRestrictServiceDefaultDepartmentFlag',
        'restrict_service_default_location_flag' => 'setRestrictServiceDefaultLocationFlag',
        'sales_default_location_id' => 'setSalesDefaultLocationId',
        'schedule_capacity' => 'setScheduleCapacity',
        'schedule_default_department_id' => 'setScheduleDefaultDepartmentId',
        'schedule_default_location_id' => 'setScheduleDefaultLocationId',
        'security_level' => 'setSecurityLevel',
        'security_location_id' => 'setSecurityLocationId',
        'security_role' => 'setSecurityRole',
        'service_default_board' => 'setServiceDefaultBoard',
        'service_default_department_id' => 'setServiceDefaultDepartmentId',
        'service_default_location_id' => 'setServiceDefaultLocationId',
        'service_location' => 'setServiceLocation',
        'service_teams' => 'setServiceTeams',
        'time_approver' => 'setTimeApprover',
        'time_reminder_email_flag' => 'setTimeReminderEmailFlag',
        'time_sheet_start_date' => 'setTimeSheetStartDate',
        'time_zone' => 'setTimeZone',
        'title' => 'setTitle',
        'type' => 'setType',
        'vendor_number' => 'setVendorNumber',
        'warehouse' => 'setWarehouse',
        'warehouse_bin' => 'setWarehouseBin',
        'work_role' => 'setWorkRole',
        'work_type' => 'setWorkType',
        '_info' => 'setInfo',
        'system_flag' => 'setSystemFlag'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'admin_flag' => 'getAdminFlag',
        'allow_expenses_entered_against_companies_flag' => 'getAllowExpensesEnteredAgainstCompaniesFlag',
        'allow_in_cell_entry_on_time_sheet' => 'getAllowInCellEntryOnTimeSheet',
        'billable_forecast' => 'getBillableForecast',
        'calendar' => 'getCalendar',
        'calendar_sync_integration_flag' => 'getCalendarSyncIntegrationFlag',
        'country' => 'getCountry',
        'daily_capacity' => 'getDailyCapacity',
        'days_tolerance' => 'getDaysTolerance',
        'default_department_id' => 'getDefaultDepartmentId',
        'default_email' => 'getDefaultEmail',
        'default_location_id' => 'getDefaultLocationId',
        'default_phone' => 'getDefaultPhone',
        'disable_online_flag' => 'getDisableOnlineFlag',
        'enable_ldap_authentication_flag' => 'getEnableLdapAuthenticationFlag',
        'enable_mobile_flag' => 'getEnableMobileFlag',
        'enable_mobile_gps_flag' => 'getEnableMobileGpsFlag',
        'enter_time_against_company_flag' => 'getEnterTimeAgainstCompanyFlag',
        'expense_approver' => 'getExpenseApprover',
        'first_name' => 'getFirstName',
        'hide_member_in_dispatch_portal_flag' => 'getHideMemberInDispatchPortalFlag',
        'hire_date' => 'getHireDate',
        'home_email' => 'getHomeEmail',
        'home_extension' => 'getHomeExtension',
        'home_phone' => 'getHomePhone',
        'hourly_cost' => 'getHourlyCost',
        'hourly_rate' => 'getHourlyRate',
        'id' => 'getId',
        'identifier' => 'getIdentifier',
        'inactive_date' => 'getInactiveDate',
        'inactive_flag' => 'getInactiveFlag',
        'include_in_utilization_reporting_flag' => 'getIncludeInUtilizationReportingFlag',
        'last_login' => 'getLastLogin',
        'last_name' => 'getLastName',
        'license_class' => 'getLicenseClass',
        'mapi_name' => 'getMapiName',
        'middle_initial' => 'getMiddleInitial',
        'minimum_hours' => 'getMinimumHours',
        'mobile_email' => 'getMobileEmail',
        'mobile_extension' => 'getMobileExtension',
        'mobile_phone' => 'getMobilePhone',
        'notes' => 'getNotes',
        'office_email' => 'getOfficeEmail',
        'office_extension' => 'getOfficeExtension',
        'office_phone' => 'getOfficePhone',
        'project_default_board' => 'getProjectDefaultBoard',
        'project_default_department_id' => 'getProjectDefaultDepartmentId',
        'project_default_location_id' => 'getProjectDefaultLocationId',
        'reports_to' => 'getReportsTo',
        'require_expense_entry_flag' => 'getRequireExpenseEntryFlag',
        'require_start_and_end_time_on_time_entry_flag' => 'getRequireStartAndEndTimeOnTimeEntryFlag',
        'require_time_sheet_entry_flag' => 'getRequireTimeSheetEntryFlag',
        'restrict_default_sales_territory_flag' => 'getRestrictDefaultSalesTerritoryFlag',
        'restrict_default_warehouse_bin_flag' => 'getRestrictDefaultWarehouseBinFlag',
        'restrict_default_warehouse_flag' => 'getRestrictDefaultWarehouseFlag',
        'restrict_department_flag' => 'getRestrictDepartmentFlag',
        'restrict_location_flag' => 'getRestrictLocationFlag',
        'restrict_project_default_department_flag' => 'getRestrictProjectDefaultDepartmentFlag',
        'restrict_project_default_location_flag' => 'getRestrictProjectDefaultLocationFlag',
        'restrict_schedule_flag' => 'getRestrictScheduleFlag',
        'restrict_service_default_department_flag' => 'getRestrictServiceDefaultDepartmentFlag',
        'restrict_service_default_location_flag' => 'getRestrictServiceDefaultLocationFlag',
        'sales_default_location_id' => 'getSalesDefaultLocationId',
        'schedule_capacity' => 'getScheduleCapacity',
        'schedule_default_department_id' => 'getScheduleDefaultDepartmentId',
        'schedule_default_location_id' => 'getScheduleDefaultLocationId',
        'security_level' => 'getSecurityLevel',
        'security_location_id' => 'getSecurityLocationId',
        'security_role' => 'getSecurityRole',
        'service_default_board' => 'getServiceDefaultBoard',
        'service_default_department_id' => 'getServiceDefaultDepartmentId',
        'service_default_location_id' => 'getServiceDefaultLocationId',
        'service_location' => 'getServiceLocation',
        'service_teams' => 'getServiceTeams',
        'time_approver' => 'getTimeApprover',
        'time_reminder_email_flag' => 'getTimeReminderEmailFlag',
        'time_sheet_start_date' => 'getTimeSheetStartDate',
        'time_zone' => 'getTimeZone',
        'title' => 'getTitle',
        'type' => 'getType',
        'vendor_number' => 'getVendorNumber',
        'warehouse' => 'getWarehouse',
        'warehouse_bin' => 'getWarehouseBin',
        'work_role' => 'getWorkRole',
        'work_type' => 'getWorkType',
        '_info' => 'getInfo',
        'system_flag' => 'getSystemFlag'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    const DEFAULT_EMAIL_OFFICE = 'Office';
    const DEFAULT_EMAIL_MOBILE = 'Mobile';
    const DEFAULT_EMAIL_HOME = 'Home';
    const DEFAULT_PHONE_OFFICE = 'Office';
    const DEFAULT_PHONE_MOBILE = 'Mobile';
    const DEFAULT_PHONE_HOME = 'Home';
    const LICENSE_CLASS_F = 'F';
    const LICENSE_CLASS_A = 'A';
    const LICENSE_CLASS_C = 'C';
    const LICENSE_CLASS_X = 'X';
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getDefaultEmailAllowableValues()
    {
        return [
            self::DEFAULT_EMAIL_OFFICE,
            self::DEFAULT_EMAIL_MOBILE,
            self::DEFAULT_EMAIL_HOME,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getDefaultPhoneAllowableValues()
    {
        return [
            self::DEFAULT_PHONE_OFFICE,
            self::DEFAULT_PHONE_MOBILE,
            self::DEFAULT_PHONE_HOME,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getLicenseClassAllowableValues()
    {
        return [
            self::LICENSE_CLASS_F,
            self::LICENSE_CLASS_A,
            self::LICENSE_CLASS_C,
            self::LICENSE_CLASS_X,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['admin_flag'] = isset($data['admin_flag']) ? $data['admin_flag'] : null;
        $this->container['allow_expenses_entered_against_companies_flag'] = isset($data['allow_expenses_entered_against_companies_flag']) ? $data['allow_expenses_entered_against_companies_flag'] : null;
        $this->container['allow_in_cell_entry_on_time_sheet'] = isset($data['allow_in_cell_entry_on_time_sheet']) ? $data['allow_in_cell_entry_on_time_sheet'] : null;
        $this->container['billable_forecast'] = isset($data['billable_forecast']) ? $data['billable_forecast'] : null;
        $this->container['calendar'] = isset($data['calendar']) ? $data['calendar'] : null;
        $this->container['calendar_sync_integration_flag'] = isset($data['calendar_sync_integration_flag']) ? $data['calendar_sync_integration_flag'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['daily_capacity'] = isset($data['daily_capacity']) ? $data['daily_capacity'] : null;
        $this->container['days_tolerance'] = isset($data['days_tolerance']) ? $data['days_tolerance'] : null;
        $this->container['default_department_id'] = isset($data['default_department_id']) ? $data['default_department_id'] : null;
        $this->container['default_email'] = isset($data['default_email']) ? $data['default_email'] : null;
        $this->container['default_location_id'] = isset($data['default_location_id']) ? $data['default_location_id'] : null;
        $this->container['default_phone'] = isset($data['default_phone']) ? $data['default_phone'] : null;
        $this->container['disable_online_flag'] = isset($data['disable_online_flag']) ? $data['disable_online_flag'] : null;
        $this->container['enable_ldap_authentication_flag'] = isset($data['enable_ldap_authentication_flag']) ? $data['enable_ldap_authentication_flag'] : null;
        $this->container['enable_mobile_flag'] = isset($data['enable_mobile_flag']) ? $data['enable_mobile_flag'] : null;
        $this->container['enable_mobile_gps_flag'] = isset($data['enable_mobile_gps_flag']) ? $data['enable_mobile_gps_flag'] : null;
        $this->container['enter_time_against_company_flag'] = isset($data['enter_time_against_company_flag']) ? $data['enter_time_against_company_flag'] : null;
        $this->container['expense_approver'] = isset($data['expense_approver']) ? $data['expense_approver'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['hide_member_in_dispatch_portal_flag'] = isset($data['hide_member_in_dispatch_portal_flag']) ? $data['hide_member_in_dispatch_portal_flag'] : null;
        $this->container['hire_date'] = isset($data['hire_date']) ? $data['hire_date'] : null;
        $this->container['home_email'] = isset($data['home_email']) ? $data['home_email'] : null;
        $this->container['home_extension'] = isset($data['home_extension']) ? $data['home_extension'] : null;
        $this->container['home_phone'] = isset($data['home_phone']) ? $data['home_phone'] : null;
        $this->container['hourly_cost'] = isset($data['hourly_cost']) ? $data['hourly_cost'] : null;
        $this->container['hourly_rate'] = isset($data['hourly_rate']) ? $data['hourly_rate'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['identifier'] = isset($data['identifier']) ? $data['identifier'] : null;
        $this->container['inactive_date'] = isset($data['inactive_date']) ? $data['inactive_date'] : null;
        $this->container['inactive_flag'] = isset($data['inactive_flag']) ? $data['inactive_flag'] : null;
        $this->container['include_in_utilization_reporting_flag'] = isset($data['include_in_utilization_reporting_flag']) ? $data['include_in_utilization_reporting_flag'] : null;
        $this->container['last_login'] = isset($data['last_login']) ? $data['last_login'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['license_class'] = isset($data['license_class']) ? $data['license_class'] : null;
        $this->container['mapi_name'] = isset($data['mapi_name']) ? $data['mapi_name'] : null;
        $this->container['middle_initial'] = isset($data['middle_initial']) ? $data['middle_initial'] : null;
        $this->container['minimum_hours'] = isset($data['minimum_hours']) ? $data['minimum_hours'] : null;
        $this->container['mobile_email'] = isset($data['mobile_email']) ? $data['mobile_email'] : null;
        $this->container['mobile_extension'] = isset($data['mobile_extension']) ? $data['mobile_extension'] : null;
        $this->container['mobile_phone'] = isset($data['mobile_phone']) ? $data['mobile_phone'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['office_email'] = isset($data['office_email']) ? $data['office_email'] : null;
        $this->container['office_extension'] = isset($data['office_extension']) ? $data['office_extension'] : null;
        $this->container['office_phone'] = isset($data['office_phone']) ? $data['office_phone'] : null;
        $this->container['project_default_board'] = isset($data['project_default_board']) ? $data['project_default_board'] : null;
        $this->container['project_default_department_id'] = isset($data['project_default_department_id']) ? $data['project_default_department_id'] : null;
        $this->container['project_default_location_id'] = isset($data['project_default_location_id']) ? $data['project_default_location_id'] : null;
        $this->container['reports_to'] = isset($data['reports_to']) ? $data['reports_to'] : null;
        $this->container['require_expense_entry_flag'] = isset($data['require_expense_entry_flag']) ? $data['require_expense_entry_flag'] : null;
        $this->container['require_start_and_end_time_on_time_entry_flag'] = isset($data['require_start_and_end_time_on_time_entry_flag']) ? $data['require_start_and_end_time_on_time_entry_flag'] : null;
        $this->container['require_time_sheet_entry_flag'] = isset($data['require_time_sheet_entry_flag']) ? $data['require_time_sheet_entry_flag'] : null;
        $this->container['restrict_default_sales_territory_flag'] = isset($data['restrict_default_sales_territory_flag']) ? $data['restrict_default_sales_territory_flag'] : null;
        $this->container['restrict_default_warehouse_bin_flag'] = isset($data['restrict_default_warehouse_bin_flag']) ? $data['restrict_default_warehouse_bin_flag'] : null;
        $this->container['restrict_default_warehouse_flag'] = isset($data['restrict_default_warehouse_flag']) ? $data['restrict_default_warehouse_flag'] : null;
        $this->container['restrict_department_flag'] = isset($data['restrict_department_flag']) ? $data['restrict_department_flag'] : null;
        $this->container['restrict_location_flag'] = isset($data['restrict_location_flag']) ? $data['restrict_location_flag'] : null;
        $this->container['restrict_project_default_department_flag'] = isset($data['restrict_project_default_department_flag']) ? $data['restrict_project_default_department_flag'] : null;
        $this->container['restrict_project_default_location_flag'] = isset($data['restrict_project_default_location_flag']) ? $data['restrict_project_default_location_flag'] : null;
        $this->container['restrict_schedule_flag'] = isset($data['restrict_schedule_flag']) ? $data['restrict_schedule_flag'] : null;
        $this->container['restrict_service_default_department_flag'] = isset($data['restrict_service_default_department_flag']) ? $data['restrict_service_default_department_flag'] : null;
        $this->container['restrict_service_default_location_flag'] = isset($data['restrict_service_default_location_flag']) ? $data['restrict_service_default_location_flag'] : null;
        $this->container['sales_default_location_id'] = isset($data['sales_default_location_id']) ? $data['sales_default_location_id'] : null;
        $this->container['schedule_capacity'] = isset($data['schedule_capacity']) ? $data['schedule_capacity'] : null;
        $this->container['schedule_default_department_id'] = isset($data['schedule_default_department_id']) ? $data['schedule_default_department_id'] : null;
        $this->container['schedule_default_location_id'] = isset($data['schedule_default_location_id']) ? $data['schedule_default_location_id'] : null;
        $this->container['security_level'] = isset($data['security_level']) ? $data['security_level'] : null;
        $this->container['security_location_id'] = isset($data['security_location_id']) ? $data['security_location_id'] : null;
        $this->container['security_role'] = isset($data['security_role']) ? $data['security_role'] : null;
        $this->container['service_default_board'] = isset($data['service_default_board']) ? $data['service_default_board'] : null;
        $this->container['service_default_department_id'] = isset($data['service_default_department_id']) ? $data['service_default_department_id'] : null;
        $this->container['service_default_location_id'] = isset($data['service_default_location_id']) ? $data['service_default_location_id'] : null;
        $this->container['service_location'] = isset($data['service_location']) ? $data['service_location'] : null;
        $this->container['service_teams'] = isset($data['service_teams']) ? $data['service_teams'] : null;
        $this->container['time_approver'] = isset($data['time_approver']) ? $data['time_approver'] : null;
        $this->container['time_reminder_email_flag'] = isset($data['time_reminder_email_flag']) ? $data['time_reminder_email_flag'] : null;
        $this->container['time_sheet_start_date'] = isset($data['time_sheet_start_date']) ? $data['time_sheet_start_date'] : null;
        $this->container['time_zone'] = isset($data['time_zone']) ? $data['time_zone'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['vendor_number'] = isset($data['vendor_number']) ? $data['vendor_number'] : null;
        $this->container['warehouse'] = isset($data['warehouse']) ? $data['warehouse'] : null;
        $this->container['warehouse_bin'] = isset($data['warehouse_bin']) ? $data['warehouse_bin'] : null;
        $this->container['work_role'] = isset($data['work_role']) ? $data['work_role'] : null;
        $this->container['work_type'] = isset($data['work_type']) ? $data['work_type'] : null;
        $this->container['_info'] = isset($data['_info']) ? $data['_info'] : null;
        $this->container['system_flag'] = isset($data['system_flag']) ? $data['system_flag'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if ($this->container['default_department_id'] === null) {
            $invalid_properties[] = "'default_department_id' can't be null";
        }
        if ($this->container['default_email'] === null) {
            $invalid_properties[] = "'default_email' can't be null";
        }
        $allowed_values = ["Office", "Mobile", "Home"];
        if (!in_array($this->container['default_email'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'default_email', must be one of #{allowed_values}.";
        }

        if ($this->container['default_location_id'] === null) {
            $invalid_properties[] = "'default_location_id' can't be null";
        }
        if ($this->container['default_phone'] === null) {
            $invalid_properties[] = "'default_phone' can't be null";
        }
        $allowed_values = ["Office", "Mobile", "Home"];
        if (!in_array($this->container['default_phone'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'default_phone', must be one of #{allowed_values}.";
        }

        if ($this->container['expense_approver'] === null) {
            $invalid_properties[] = "'expense_approver' can't be null";
        }
        if ($this->container['first_name'] === null) {
            $invalid_properties[] = "'first_name' can't be null";
        }
        if ((strlen($this->container['first_name']) > 30)) {
            $invalid_properties[] = "invalid value for 'first_name', the character length must be smaller than or equal to 30.";
        }

        if ($this->container['hire_date'] === null) {
            $invalid_properties[] = "'hire_date' can't be null";
        }
        if (!is_null($this->container['home_email']) && (strlen($this->container['home_email']) > 250)) {
            $invalid_properties[] = "invalid value for 'home_email', the character length must be smaller than or equal to 250.";
        }

        if (!is_null($this->container['home_extension']) && (strlen($this->container['home_extension']) > 10)) {
            $invalid_properties[] = "invalid value for 'home_extension', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['home_phone']) && (strlen($this->container['home_phone']) > 15)) {
            $invalid_properties[] = "invalid value for 'home_phone', the character length must be smaller than or equal to 15.";
        }

        if ($this->container['identifier'] === null) {
            $invalid_properties[] = "'identifier' can't be null";
        }
        if ((strlen($this->container['identifier']) > 15)) {
            $invalid_properties[] = "invalid value for 'identifier', the character length must be smaller than or equal to 15.";
        }

        if ($this->container['last_name'] === null) {
            $invalid_properties[] = "'last_name' can't be null";
        }
        if ((strlen($this->container['last_name']) > 30)) {
            $invalid_properties[] = "invalid value for 'last_name', the character length must be smaller than or equal to 30.";
        }

        if ($this->container['license_class'] === null) {
            $invalid_properties[] = "'license_class' can't be null";
        }
        $allowed_values = ["F", "A", "C", "X"];
        if (!in_array($this->container['license_class'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'license_class', must be one of #{allowed_values}.";
        }

        if (!is_null($this->container['mobile_email']) && (strlen($this->container['mobile_email']) > 250)) {
            $invalid_properties[] = "invalid value for 'mobile_email', the character length must be smaller than or equal to 250.";
        }

        if (!is_null($this->container['mobile_extension']) && (strlen($this->container['mobile_extension']) > 10)) {
            $invalid_properties[] = "invalid value for 'mobile_extension', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['mobile_phone']) && (strlen($this->container['mobile_phone']) > 15)) {
            $invalid_properties[] = "invalid value for 'mobile_phone', the character length must be smaller than or equal to 15.";
        }

        if (!is_null($this->container['office_email']) && (strlen($this->container['office_email']) > 250)) {
            $invalid_properties[] = "invalid value for 'office_email', the character length must be smaller than or equal to 250.";
        }

        if (!is_null($this->container['office_extension']) && (strlen($this->container['office_extension']) > 10)) {
            $invalid_properties[] = "invalid value for 'office_extension', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['office_phone']) && (strlen($this->container['office_phone']) > 15)) {
            $invalid_properties[] = "invalid value for 'office_phone', the character length must be smaller than or equal to 15.";
        }

        if ($this->container['sales_default_location_id'] === null) {
            $invalid_properties[] = "'sales_default_location_id' can't be null";
        }
        if ($this->container['time_approver'] === null) {
            $invalid_properties[] = "'time_approver' can't be null";
        }
        if ($this->container['time_zone'] === null) {
            $invalid_properties[] = "'time_zone' can't be null";
        }
        if (!is_null($this->container['title']) && (strlen($this->container['title']) > 50)) {
            $invalid_properties[] = "invalid value for 'title', the character length must be smaller than or equal to 50.";
        }

        if ($this->container['work_role'] === null) {
            $invalid_properties[] = "'work_role' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['default_department_id'] === null) {
            return false;
        }
        if ($this->container['default_email'] === null) {
            return false;
        }
        $allowed_values = ["Office", "Mobile", "Home"];
        if (!in_array($this->container['default_email'], $allowed_values)) {
            return false;
        }
        if ($this->container['default_location_id'] === null) {
            return false;
        }
        if ($this->container['default_phone'] === null) {
            return false;
        }
        $allowed_values = ["Office", "Mobile", "Home"];
        if (!in_array($this->container['default_phone'], $allowed_values)) {
            return false;
        }
        if ($this->container['expense_approver'] === null) {
            return false;
        }
        if ($this->container['first_name'] === null) {
            return false;
        }
        if (strlen($this->container['first_name']) > 30) {
            return false;
        }
        if ($this->container['hire_date'] === null) {
            return false;
        }
        if (strlen($this->container['home_email']) > 250) {
            return false;
        }
        if (strlen($this->container['home_extension']) > 10) {
            return false;
        }
        if (strlen($this->container['home_phone']) > 15) {
            return false;
        }
        if ($this->container['identifier'] === null) {
            return false;
        }
        if (strlen($this->container['identifier']) > 15) {
            return false;
        }
        if ($this->container['last_name'] === null) {
            return false;
        }
        if (strlen($this->container['last_name']) > 30) {
            return false;
        }
        if ($this->container['license_class'] === null) {
            return false;
        }
        $allowed_values = ["F", "A", "C", "X"];
        if (!in_array($this->container['license_class'], $allowed_values)) {
            return false;
        }
        if (strlen($this->container['mobile_email']) > 250) {
            return false;
        }
        if (strlen($this->container['mobile_extension']) > 10) {
            return false;
        }
        if (strlen($this->container['mobile_phone']) > 15) {
            return false;
        }
        if (strlen($this->container['office_email']) > 250) {
            return false;
        }
        if (strlen($this->container['office_extension']) > 10) {
            return false;
        }
        if (strlen($this->container['office_phone']) > 15) {
            return false;
        }
        if ($this->container['sales_default_location_id'] === null) {
            return false;
        }
        if ($this->container['time_approver'] === null) {
            return false;
        }
        if ($this->container['time_zone'] === null) {
            return false;
        }
        if (strlen($this->container['title']) > 50) {
            return false;
        }
        if ($this->container['work_role'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets admin_flag
     * @return bool
     */
    public function getAdminFlag()
    {
        return $this->container['admin_flag'];
    }

    /**
     * Sets admin_flag
     * @param bool $admin_flag
     * @return $this
     */
    public function setAdminFlag($admin_flag)
    {
        $this->container['admin_flag'] = $admin_flag;

        return $this;
    }

    /**
     * Gets allow_expenses_entered_against_companies_flag
     * @return bool
     */
    public function getAllowExpensesEnteredAgainstCompaniesFlag()
    {
        return $this->container['allow_expenses_entered_against_companies_flag'];
    }

    /**
     * Sets allow_expenses_entered_against_companies_flag
     * @param bool $allow_expenses_entered_against_companies_flag
     * @return $this
     */
    public function setAllowExpensesEnteredAgainstCompaniesFlag($allow_expenses_entered_against_companies_flag)
    {
        $this->container['allow_expenses_entered_against_companies_flag'] = $allow_expenses_entered_against_companies_flag;

        return $this;
    }

    /**
     * Gets allow_in_cell_entry_on_time_sheet
     * @return bool
     */
    public function getAllowInCellEntryOnTimeSheet()
    {
        return $this->container['allow_in_cell_entry_on_time_sheet'];
    }

    /**
     * Sets allow_in_cell_entry_on_time_sheet
     * @param bool $allow_in_cell_entry_on_time_sheet
     * @return $this
     */
    public function setAllowInCellEntryOnTimeSheet($allow_in_cell_entry_on_time_sheet)
    {
        $this->container['allow_in_cell_entry_on_time_sheet'] = $allow_in_cell_entry_on_time_sheet;

        return $this;
    }

    /**
     * Gets billable_forecast
     * @return double
     */
    public function getBillableForecast()
    {
        return $this->container['billable_forecast'];
    }

    /**
     * Sets billable_forecast
     * @param double $billable_forecast
     * @return $this
     */
    public function setBillableForecast($billable_forecast)
    {
        $this->container['billable_forecast'] = $billable_forecast;

        return $this;
    }

    /**
     * Gets calendar
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\CalendarReference
     */
    public function getCalendar()
    {
        return $this->container['calendar'];
    }

    /**
     * Sets calendar
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\CalendarReference $calendar
     * @return $this
     */
    public function setCalendar($calendar)
    {
        $this->container['calendar'] = $calendar;

        return $this;
    }

    /**
     * Gets calendar_sync_integration_flag
     * @return bool
     */
    public function getCalendarSyncIntegrationFlag()
    {
        return $this->container['calendar_sync_integration_flag'];
    }

    /**
     * Sets calendar_sync_integration_flag
     * @param bool $calendar_sync_integration_flag
     * @return $this
     */
    public function setCalendarSyncIntegrationFlag($calendar_sync_integration_flag)
    {
        $this->container['calendar_sync_integration_flag'] = $calendar_sync_integration_flag;

        return $this;
    }

    /**
     * Gets country
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\CountryReference
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\CountryReference $country
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets daily_capacity
     * @return double
     */
    public function getDailyCapacity()
    {
        return $this->container['daily_capacity'];
    }

    /**
     * Sets daily_capacity
     * @param double $daily_capacity
     * @return $this
     */
    public function setDailyCapacity($daily_capacity)
    {
        $this->container['daily_capacity'] = $daily_capacity;

        return $this;
    }

    /**
     * Gets days_tolerance
     * @return int
     */
    public function getDaysTolerance()
    {
        return $this->container['days_tolerance'];
    }

    /**
     * Sets days_tolerance
     * @param int $days_tolerance
     * @return $this
     */
    public function setDaysTolerance($days_tolerance)
    {
        $this->container['days_tolerance'] = $days_tolerance;

        return $this;
    }

    /**
     * Gets default_department_id
     * @return int
     */
    public function getDefaultDepartmentId()
    {
        return $this->container['default_department_id'];
    }

    /**
     * Sets default_department_id
     * @param int $default_department_id
     * @return $this
     */
    public function setDefaultDepartmentId($default_department_id)
    {
        $this->container['default_department_id'] = $default_department_id;

        return $this;
    }

    /**
     * Gets default_email
     * @return string
     */
    public function getDefaultEmail()
    {
        return $this->container['default_email'];
    }

    /**
     * Sets default_email
     * @param string $default_email
     * @return $this
     */
    public function setDefaultEmail($default_email)
    {
        $allowed_values = array('Office', 'Mobile', 'Home');
        if ((!in_array($default_email, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'default_email', must be one of 'Office', 'Mobile', 'Home'");
        }
        $this->container['default_email'] = $default_email;

        return $this;
    }

    /**
     * Gets default_location_id
     * @return int
     */
    public function getDefaultLocationId()
    {
        return $this->container['default_location_id'];
    }

    /**
     * Sets default_location_id
     * @param int $default_location_id
     * @return $this
     */
    public function setDefaultLocationId($default_location_id)
    {
        $this->container['default_location_id'] = $default_location_id;

        return $this;
    }

    /**
     * Gets default_phone
     * @return string
     */
    public function getDefaultPhone()
    {
        return $this->container['default_phone'];
    }

    /**
     * Sets default_phone
     * @param string $default_phone
     * @return $this
     */
    public function setDefaultPhone($default_phone)
    {
        $allowed_values = array('Office', 'Mobile', 'Home');
        if ((!in_array($default_phone, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'default_phone', must be one of 'Office', 'Mobile', 'Home'");
        }
        $this->container['default_phone'] = $default_phone;

        return $this;
    }

    /**
     * Gets disable_online_flag
     * @return bool
     */
    public function getDisableOnlineFlag()
    {
        return $this->container['disable_online_flag'];
    }

    /**
     * Sets disable_online_flag
     * @param bool $disable_online_flag
     * @return $this
     */
    public function setDisableOnlineFlag($disable_online_flag)
    {
        $this->container['disable_online_flag'] = $disable_online_flag;

        return $this;
    }

    /**
     * Gets enable_ldap_authentication_flag
     * @return bool
     */
    public function getEnableLdapAuthenticationFlag()
    {
        return $this->container['enable_ldap_authentication_flag'];
    }

    /**
     * Sets enable_ldap_authentication_flag
     * @param bool $enable_ldap_authentication_flag
     * @return $this
     */
    public function setEnableLdapAuthenticationFlag($enable_ldap_authentication_flag)
    {
        $this->container['enable_ldap_authentication_flag'] = $enable_ldap_authentication_flag;

        return $this;
    }

    /**
     * Gets enable_mobile_flag
     * @return bool
     */
    public function getEnableMobileFlag()
    {
        return $this->container['enable_mobile_flag'];
    }

    /**
     * Sets enable_mobile_flag
     * @param bool $enable_mobile_flag
     * @return $this
     */
    public function setEnableMobileFlag($enable_mobile_flag)
    {
        $this->container['enable_mobile_flag'] = $enable_mobile_flag;

        return $this;
    }

    /**
     * Gets enable_mobile_gps_flag
     * @return bool
     */
    public function getEnableMobileGpsFlag()
    {
        return $this->container['enable_mobile_gps_flag'];
    }

    /**
     * Sets enable_mobile_gps_flag
     * @param bool $enable_mobile_gps_flag
     * @return $this
     */
    public function setEnableMobileGpsFlag($enable_mobile_gps_flag)
    {
        $this->container['enable_mobile_gps_flag'] = $enable_mobile_gps_flag;

        return $this;
    }

    /**
     * Gets enter_time_against_company_flag
     * @return bool
     */
    public function getEnterTimeAgainstCompanyFlag()
    {
        return $this->container['enter_time_against_company_flag'];
    }

    /**
     * Sets enter_time_against_company_flag
     * @param bool $enter_time_against_company_flag
     * @return $this
     */
    public function setEnterTimeAgainstCompanyFlag($enter_time_against_company_flag)
    {
        $this->container['enter_time_against_company_flag'] = $enter_time_against_company_flag;

        return $this;
    }

    /**
     * Gets expense_approver
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberReference
     */
    public function getExpenseApprover()
    {
        return $this->container['expense_approver'];
    }

    /**
     * Sets expense_approver
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberReference $expense_approver
     * @return $this
     */
    public function setExpenseApprover($expense_approver)
    {
        $this->container['expense_approver'] = $expense_approver;

        return $this;
    }

    /**
     * Gets first_name
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     * @param string $first_name
     * @return $this
     */
    public function setFirstName($first_name)
    {
        if ((strlen($first_name) > 30)) {
            throw new \InvalidArgumentException('invalid length for $first_name when calling Member., must be smaller than or equal to 30.');
        }

        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets hide_member_in_dispatch_portal_flag
     * @return bool
     */
    public function getHideMemberInDispatchPortalFlag()
    {
        return $this->container['hide_member_in_dispatch_portal_flag'];
    }

    /**
     * Sets hide_member_in_dispatch_portal_flag
     * @param bool $hide_member_in_dispatch_portal_flag
     * @return $this
     */
    public function setHideMemberInDispatchPortalFlag($hide_member_in_dispatch_portal_flag)
    {
        $this->container['hide_member_in_dispatch_portal_flag'] = $hide_member_in_dispatch_portal_flag;

        return $this;
    }

    /**
     * Gets hire_date
     * @return \DateTime
     */
    public function getHireDate()
    {
        return $this->container['hire_date'];
    }

    /**
     * Sets hire_date
     * @param \DateTime $hire_date
     * @return $this
     */
    public function setHireDate($hire_date)
    {
        $this->container['hire_date'] = $hire_date;

        return $this;
    }

    /**
     * Gets home_email
     * @return string
     */
    public function getHomeEmail()
    {
        return $this->container['home_email'];
    }

    /**
     * Sets home_email
     * @param string $home_email
     * @return $this
     */
    public function setHomeEmail($home_email)
    {
        if (!is_null($home_email) && (strlen($home_email) > 250)) {
            throw new \InvalidArgumentException('invalid length for $home_email when calling Member., must be smaller than or equal to 250.');
        }

        $this->container['home_email'] = $home_email;

        return $this;
    }

    /**
     * Gets home_extension
     * @return string
     */
    public function getHomeExtension()
    {
        return $this->container['home_extension'];
    }

    /**
     * Sets home_extension
     * @param string $home_extension
     * @return $this
     */
    public function setHomeExtension($home_extension)
    {
        if (!is_null($home_extension) && (strlen($home_extension) > 10)) {
            throw new \InvalidArgumentException('invalid length for $home_extension when calling Member., must be smaller than or equal to 10.');
        }

        $this->container['home_extension'] = $home_extension;

        return $this;
    }

    /**
     * Gets home_phone
     * @return string
     */
    public function getHomePhone()
    {
        return $this->container['home_phone'];
    }

    /**
     * Sets home_phone
     * @param string $home_phone
     * @return $this
     */
    public function setHomePhone($home_phone)
    {
        if (!is_null($home_phone) && (strlen($home_phone) > 15)) {
            throw new \InvalidArgumentException('invalid length for $home_phone when calling Member., must be smaller than or equal to 15.');
        }

        $this->container['home_phone'] = $home_phone;

        return $this;
    }

    /**
     * Gets hourly_cost
     * @return double
     */
    public function getHourlyCost()
    {
        return $this->container['hourly_cost'];
    }

    /**
     * Sets hourly_cost
     * @param double $hourly_cost
     * @return $this
     */
    public function setHourlyCost($hourly_cost)
    {
        $this->container['hourly_cost'] = $hourly_cost;

        return $this;
    }

    /**
     * Gets hourly_rate
     * @return double
     */
    public function getHourlyRate()
    {
        return $this->container['hourly_rate'];
    }

    /**
     * Sets hourly_rate
     * @param double $hourly_rate
     * @return $this
     */
    public function setHourlyRate($hourly_rate)
    {
        $this->container['hourly_rate'] = $hourly_rate;

        return $this;
    }

    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param int $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets identifier
     * @return string
     */
    public function getIdentifier()
    {
        return $this->container['identifier'];
    }

    /**
     * Sets identifier
     * @param string $identifier
     * @return $this
     */
    public function setIdentifier($identifier)
    {
        if ((strlen($identifier) > 15)) {
            throw new \InvalidArgumentException('invalid length for $identifier when calling Member., must be smaller than or equal to 15.');
        }

        $this->container['identifier'] = $identifier;

        return $this;
    }

    /**
     * Gets inactive_date
     * @return \DateTime
     */
    public function getInactiveDate()
    {
        return $this->container['inactive_date'];
    }

    /**
     * Sets inactive_date
     * @param \DateTime $inactive_date
     * @return $this
     */
    public function setInactiveDate($inactive_date)
    {
        $this->container['inactive_date'] = $inactive_date;

        return $this;
    }

    /**
     * Gets inactive_flag
     * @return bool
     */
    public function getInactiveFlag()
    {
        return $this->container['inactive_flag'];
    }

    /**
     * Sets inactive_flag
     * @param bool $inactive_flag
     * @return $this
     */
    public function setInactiveFlag($inactive_flag)
    {
        $this->container['inactive_flag'] = $inactive_flag;

        return $this;
    }

    /**
     * Gets include_in_utilization_reporting_flag
     * @return bool
     */
    public function getIncludeInUtilizationReportingFlag()
    {
        return $this->container['include_in_utilization_reporting_flag'];
    }

    /**
     * Sets include_in_utilization_reporting_flag
     * @param bool $include_in_utilization_reporting_flag
     * @return $this
     */
    public function setIncludeInUtilizationReportingFlag($include_in_utilization_reporting_flag)
    {
        $this->container['include_in_utilization_reporting_flag'] = $include_in_utilization_reporting_flag;

        return $this;
    }

    /**
     * Gets last_login
     * @return string
     */
    public function getLastLogin()
    {
        return $this->container['last_login'];
    }

    /**
     * Sets last_login
     * @param string $last_login
     * @return $this
     */
    public function setLastLogin($last_login)
    {
        $this->container['last_login'] = $last_login;

        return $this;
    }

    /**
     * Gets last_name
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     * @param string $last_name
     * @return $this
     */
    public function setLastName($last_name)
    {
        if ((strlen($last_name) > 30)) {
            throw new \InvalidArgumentException('invalid length for $last_name when calling Member., must be smaller than or equal to 30.');
        }

        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets license_class
     * @return string
     */
    public function getLicenseClass()
    {
        return $this->container['license_class'];
    }

    /**
     * Sets license_class
     * @param string $license_class F = Regular Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
     * @return $this
     */
    public function setLicenseClass($license_class)
    {
        $allowed_values = array('F', 'A', 'C', 'X');
        if ((!in_array($license_class, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'license_class', must be one of 'F', 'A', 'C', 'X'");
        }
        $this->container['license_class'] = $license_class;

        return $this;
    }

    /**
     * Gets mapi_name
     * @return string
     */
    public function getMapiName()
    {
        return $this->container['mapi_name'];
    }

    /**
     * Sets mapi_name
     * @param string $mapi_name
     * @return $this
     */
    public function setMapiName($mapi_name)
    {
        $this->container['mapi_name'] = $mapi_name;

        return $this;
    }

    /**
     * Gets middle_initial
     * @return string
     */
    public function getMiddleInitial()
    {
        return $this->container['middle_initial'];
    }

    /**
     * Sets middle_initial
     * @param string $middle_initial
     * @return $this
     */
    public function setMiddleInitial($middle_initial)
    {
        $this->container['middle_initial'] = $middle_initial;

        return $this;
    }

    /**
     * Gets minimum_hours
     * @return double
     */
    public function getMinimumHours()
    {
        return $this->container['minimum_hours'];
    }

    /**
     * Sets minimum_hours
     * @param double $minimum_hours
     * @return $this
     */
    public function setMinimumHours($minimum_hours)
    {
        $this->container['minimum_hours'] = $minimum_hours;

        return $this;
    }

    /**
     * Gets mobile_email
     * @return string
     */
    public function getMobileEmail()
    {
        return $this->container['mobile_email'];
    }

    /**
     * Sets mobile_email
     * @param string $mobile_email
     * @return $this
     */
    public function setMobileEmail($mobile_email)
    {
        if (!is_null($mobile_email) && (strlen($mobile_email) > 250)) {
            throw new \InvalidArgumentException('invalid length for $mobile_email when calling Member., must be smaller than or equal to 250.');
        }

        $this->container['mobile_email'] = $mobile_email;

        return $this;
    }

    /**
     * Gets mobile_extension
     * @return string
     */
    public function getMobileExtension()
    {
        return $this->container['mobile_extension'];
    }

    /**
     * Sets mobile_extension
     * @param string $mobile_extension
     * @return $this
     */
    public function setMobileExtension($mobile_extension)
    {
        if (!is_null($mobile_extension) && (strlen($mobile_extension) > 10)) {
            throw new \InvalidArgumentException('invalid length for $mobile_extension when calling Member., must be smaller than or equal to 10.');
        }

        $this->container['mobile_extension'] = $mobile_extension;

        return $this;
    }

    /**
     * Gets mobile_phone
     * @return string
     */
    public function getMobilePhone()
    {
        return $this->container['mobile_phone'];
    }

    /**
     * Sets mobile_phone
     * @param string $mobile_phone
     * @return $this
     */
    public function setMobilePhone($mobile_phone)
    {
        if (!is_null($mobile_phone) && (strlen($mobile_phone) > 15)) {
            throw new \InvalidArgumentException('invalid length for $mobile_phone when calling Member., must be smaller than or equal to 15.');
        }

        $this->container['mobile_phone'] = $mobile_phone;

        return $this;
    }

    /**
     * Gets notes
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     * @param string $notes
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets office_email
     * @return string
     */
    public function getOfficeEmail()
    {
        return $this->container['office_email'];
    }

    /**
     * Sets office_email
     * @param string $office_email
     * @return $this
     */
    public function setOfficeEmail($office_email)
    {
        if (!is_null($office_email) && (strlen($office_email) > 250)) {
            throw new \InvalidArgumentException('invalid length for $office_email when calling Member., must be smaller than or equal to 250.');
        }

        $this->container['office_email'] = $office_email;

        return $this;
    }

    /**
     * Gets office_extension
     * @return string
     */
    public function getOfficeExtension()
    {
        return $this->container['office_extension'];
    }

    /**
     * Sets office_extension
     * @param string $office_extension
     * @return $this
     */
    public function setOfficeExtension($office_extension)
    {
        if (!is_null($office_extension) && (strlen($office_extension) > 10)) {
            throw new \InvalidArgumentException('invalid length for $office_extension when calling Member., must be smaller than or equal to 10.');
        }

        $this->container['office_extension'] = $office_extension;

        return $this;
    }

    /**
     * Gets office_phone
     * @return string
     */
    public function getOfficePhone()
    {
        return $this->container['office_phone'];
    }

    /**
     * Sets office_phone
     * @param string $office_phone
     * @return $this
     */
    public function setOfficePhone($office_phone)
    {
        if (!is_null($office_phone) && (strlen($office_phone) > 15)) {
            throw new \InvalidArgumentException('invalid length for $office_phone when calling Member., must be smaller than or equal to 15.');
        }

        $this->container['office_phone'] = $office_phone;

        return $this;
    }

    /**
     * Gets project_default_board
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\ProjectBoardReference
     */
    public function getProjectDefaultBoard()
    {
        return $this->container['project_default_board'];
    }

    /**
     * Sets project_default_board
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\ProjectBoardReference $project_default_board
     * @return $this
     */
    public function setProjectDefaultBoard($project_default_board)
    {
        $this->container['project_default_board'] = $project_default_board;

        return $this;
    }

    /**
     * Gets project_default_department_id
     * @return int
     */
    public function getProjectDefaultDepartmentId()
    {
        return $this->container['project_default_department_id'];
    }

    /**
     * Sets project_default_department_id
     * @param int $project_default_department_id
     * @return $this
     */
    public function setProjectDefaultDepartmentId($project_default_department_id)
    {
        $this->container['project_default_department_id'] = $project_default_department_id;

        return $this;
    }

    /**
     * Gets project_default_location_id
     * @return int
     */
    public function getProjectDefaultLocationId()
    {
        return $this->container['project_default_location_id'];
    }

    /**
     * Sets project_default_location_id
     * @param int $project_default_location_id
     * @return $this
     */
    public function setProjectDefaultLocationId($project_default_location_id)
    {
        $this->container['project_default_location_id'] = $project_default_location_id;

        return $this;
    }

    /**
     * Gets reports_to
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberReference
     */
    public function getReportsTo()
    {
        return $this->container['reports_to'];
    }

    /**
     * Sets reports_to
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberReference $reports_to
     * @return $this
     */
    public function setReportsTo($reports_to)
    {
        $this->container['reports_to'] = $reports_to;

        return $this;
    }

    /**
     * Gets require_expense_entry_flag
     * @return bool
     */
    public function getRequireExpenseEntryFlag()
    {
        return $this->container['require_expense_entry_flag'];
    }

    /**
     * Sets require_expense_entry_flag
     * @param bool $require_expense_entry_flag
     * @return $this
     */
    public function setRequireExpenseEntryFlag($require_expense_entry_flag)
    {
        $this->container['require_expense_entry_flag'] = $require_expense_entry_flag;

        return $this;
    }

    /**
     * Gets require_start_and_end_time_on_time_entry_flag
     * @return bool
     */
    public function getRequireStartAndEndTimeOnTimeEntryFlag()
    {
        return $this->container['require_start_and_end_time_on_time_entry_flag'];
    }

    /**
     * Sets require_start_and_end_time_on_time_entry_flag
     * @param bool $require_start_and_end_time_on_time_entry_flag
     * @return $this
     */
    public function setRequireStartAndEndTimeOnTimeEntryFlag($require_start_and_end_time_on_time_entry_flag)
    {
        $this->container['require_start_and_end_time_on_time_entry_flag'] = $require_start_and_end_time_on_time_entry_flag;

        return $this;
    }

    /**
     * Gets require_time_sheet_entry_flag
     * @return bool
     */
    public function getRequireTimeSheetEntryFlag()
    {
        return $this->container['require_time_sheet_entry_flag'];
    }

    /**
     * Sets require_time_sheet_entry_flag
     * @param bool $require_time_sheet_entry_flag
     * @return $this
     */
    public function setRequireTimeSheetEntryFlag($require_time_sheet_entry_flag)
    {
        $this->container['require_time_sheet_entry_flag'] = $require_time_sheet_entry_flag;

        return $this;
    }

    /**
     * Gets restrict_default_sales_territory_flag
     * @return bool
     */
    public function getRestrictDefaultSalesTerritoryFlag()
    {
        return $this->container['restrict_default_sales_territory_flag'];
    }

    /**
     * Sets restrict_default_sales_territory_flag
     * @param bool $restrict_default_sales_territory_flag
     * @return $this
     */
    public function setRestrictDefaultSalesTerritoryFlag($restrict_default_sales_territory_flag)
    {
        $this->container['restrict_default_sales_territory_flag'] = $restrict_default_sales_territory_flag;

        return $this;
    }

    /**
     * Gets restrict_default_warehouse_bin_flag
     * @return bool
     */
    public function getRestrictDefaultWarehouseBinFlag()
    {
        return $this->container['restrict_default_warehouse_bin_flag'];
    }

    /**
     * Sets restrict_default_warehouse_bin_flag
     * @param bool $restrict_default_warehouse_bin_flag
     * @return $this
     */
    public function setRestrictDefaultWarehouseBinFlag($restrict_default_warehouse_bin_flag)
    {
        $this->container['restrict_default_warehouse_bin_flag'] = $restrict_default_warehouse_bin_flag;

        return $this;
    }

    /**
     * Gets restrict_default_warehouse_flag
     * @return bool
     */
    public function getRestrictDefaultWarehouseFlag()
    {
        return $this->container['restrict_default_warehouse_flag'];
    }

    /**
     * Sets restrict_default_warehouse_flag
     * @param bool $restrict_default_warehouse_flag
     * @return $this
     */
    public function setRestrictDefaultWarehouseFlag($restrict_default_warehouse_flag)
    {
        $this->container['restrict_default_warehouse_flag'] = $restrict_default_warehouse_flag;

        return $this;
    }

    /**
     * Gets restrict_department_flag
     * @return bool
     */
    public function getRestrictDepartmentFlag()
    {
        return $this->container['restrict_department_flag'];
    }

    /**
     * Sets restrict_department_flag
     * @param bool $restrict_department_flag
     * @return $this
     */
    public function setRestrictDepartmentFlag($restrict_department_flag)
    {
        $this->container['restrict_department_flag'] = $restrict_department_flag;

        return $this;
    }

    /**
     * Gets restrict_location_flag
     * @return bool
     */
    public function getRestrictLocationFlag()
    {
        return $this->container['restrict_location_flag'];
    }

    /**
     * Sets restrict_location_flag
     * @param bool $restrict_location_flag
     * @return $this
     */
    public function setRestrictLocationFlag($restrict_location_flag)
    {
        $this->container['restrict_location_flag'] = $restrict_location_flag;

        return $this;
    }

    /**
     * Gets restrict_project_default_department_flag
     * @return bool
     */
    public function getRestrictProjectDefaultDepartmentFlag()
    {
        return $this->container['restrict_project_default_department_flag'];
    }

    /**
     * Sets restrict_project_default_department_flag
     * @param bool $restrict_project_default_department_flag
     * @return $this
     */
    public function setRestrictProjectDefaultDepartmentFlag($restrict_project_default_department_flag)
    {
        $this->container['restrict_project_default_department_flag'] = $restrict_project_default_department_flag;

        return $this;
    }

    /**
     * Gets restrict_project_default_location_flag
     * @return bool
     */
    public function getRestrictProjectDefaultLocationFlag()
    {
        return $this->container['restrict_project_default_location_flag'];
    }

    /**
     * Sets restrict_project_default_location_flag
     * @param bool $restrict_project_default_location_flag
     * @return $this
     */
    public function setRestrictProjectDefaultLocationFlag($restrict_project_default_location_flag)
    {
        $this->container['restrict_project_default_location_flag'] = $restrict_project_default_location_flag;

        return $this;
    }

    /**
     * Gets restrict_schedule_flag
     * @return bool
     */
    public function getRestrictScheduleFlag()
    {
        return $this->container['restrict_schedule_flag'];
    }

    /**
     * Sets restrict_schedule_flag
     * @param bool $restrict_schedule_flag
     * @return $this
     */
    public function setRestrictScheduleFlag($restrict_schedule_flag)
    {
        $this->container['restrict_schedule_flag'] = $restrict_schedule_flag;

        return $this;
    }

    /**
     * Gets restrict_service_default_department_flag
     * @return bool
     */
    public function getRestrictServiceDefaultDepartmentFlag()
    {
        return $this->container['restrict_service_default_department_flag'];
    }

    /**
     * Sets restrict_service_default_department_flag
     * @param bool $restrict_service_default_department_flag
     * @return $this
     */
    public function setRestrictServiceDefaultDepartmentFlag($restrict_service_default_department_flag)
    {
        $this->container['restrict_service_default_department_flag'] = $restrict_service_default_department_flag;

        return $this;
    }

    /**
     * Gets restrict_service_default_location_flag
     * @return bool
     */
    public function getRestrictServiceDefaultLocationFlag()
    {
        return $this->container['restrict_service_default_location_flag'];
    }

    /**
     * Sets restrict_service_default_location_flag
     * @param bool $restrict_service_default_location_flag
     * @return $this
     */
    public function setRestrictServiceDefaultLocationFlag($restrict_service_default_location_flag)
    {
        $this->container['restrict_service_default_location_flag'] = $restrict_service_default_location_flag;

        return $this;
    }

    /**
     * Gets sales_default_location_id
     * @return int
     */
    public function getSalesDefaultLocationId()
    {
        return $this->container['sales_default_location_id'];
    }

    /**
     * Sets sales_default_location_id
     * @param int $sales_default_location_id
     * @return $this
     */
    public function setSalesDefaultLocationId($sales_default_location_id)
    {
        $this->container['sales_default_location_id'] = $sales_default_location_id;

        return $this;
    }

    /**
     * Gets schedule_capacity
     * @return double
     */
    public function getScheduleCapacity()
    {
        return $this->container['schedule_capacity'];
    }

    /**
     * Sets schedule_capacity
     * @param double $schedule_capacity
     * @return $this
     */
    public function setScheduleCapacity($schedule_capacity)
    {
        $this->container['schedule_capacity'] = $schedule_capacity;

        return $this;
    }

    /**
     * Gets schedule_default_department_id
     * @return int
     */
    public function getScheduleDefaultDepartmentId()
    {
        return $this->container['schedule_default_department_id'];
    }

    /**
     * Sets schedule_default_department_id
     * @param int $schedule_default_department_id
     * @return $this
     */
    public function setScheduleDefaultDepartmentId($schedule_default_department_id)
    {
        $this->container['schedule_default_department_id'] = $schedule_default_department_id;

        return $this;
    }

    /**
     * Gets schedule_default_location_id
     * @return int
     */
    public function getScheduleDefaultLocationId()
    {
        return $this->container['schedule_default_location_id'];
    }

    /**
     * Sets schedule_default_location_id
     * @param int $schedule_default_location_id
     * @return $this
     */
    public function setScheduleDefaultLocationId($schedule_default_location_id)
    {
        $this->container['schedule_default_location_id'] = $schedule_default_location_id;

        return $this;
    }

    /**
     * Gets security_level
     * @return string
     */
    public function getSecurityLevel()
    {
        return $this->container['security_level'];
    }

    /**
     * Sets security_level
     * @param string $security_level
     * @return $this
     */
    public function setSecurityLevel($security_level)
    {
        $this->container['security_level'] = $security_level;

        return $this;
    }

    /**
     * Gets security_location_id
     * @return int
     */
    public function getSecurityLocationId()
    {
        return $this->container['security_location_id'];
    }

    /**
     * Sets security_location_id
     * @param int $security_location_id
     * @return $this
     */
    public function setSecurityLocationId($security_location_id)
    {
        $this->container['security_location_id'] = $security_location_id;

        return $this;
    }

    /**
     * Gets security_role
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\SecurityRoleReference
     */
    public function getSecurityRole()
    {
        return $this->container['security_role'];
    }

    /**
     * Sets security_role
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\SecurityRoleReference $security_role
     * @return $this
     */
    public function setSecurityRole($security_role)
    {
        $this->container['security_role'] = $security_role;

        return $this;
    }

    /**
     * Gets service_default_board
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\BoardReference
     */
    public function getServiceDefaultBoard()
    {
        return $this->container['service_default_board'];
    }

    /**
     * Sets service_default_board
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\BoardReference $service_default_board
     * @return $this
     */
    public function setServiceDefaultBoard($service_default_board)
    {
        $this->container['service_default_board'] = $service_default_board;

        return $this;
    }

    /**
     * Gets service_default_department_id
     * @return int
     */
    public function getServiceDefaultDepartmentId()
    {
        return $this->container['service_default_department_id'];
    }

    /**
     * Sets service_default_department_id
     * @param int $service_default_department_id
     * @return $this
     */
    public function setServiceDefaultDepartmentId($service_default_department_id)
    {
        $this->container['service_default_department_id'] = $service_default_department_id;

        return $this;
    }

    /**
     * Gets service_default_location_id
     * @return int
     */
    public function getServiceDefaultLocationId()
    {
        return $this->container['service_default_location_id'];
    }

    /**
     * Sets service_default_location_id
     * @param int $service_default_location_id
     * @return $this
     */
    public function setServiceDefaultLocationId($service_default_location_id)
    {
        $this->container['service_default_location_id'] = $service_default_location_id;

        return $this;
    }

    /**
     * Gets service_location
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\ServiceLocationReference
     */
    public function getServiceLocation()
    {
        return $this->container['service_location'];
    }

    /**
     * Sets service_location
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\ServiceLocationReference $service_location
     * @return $this
     */
    public function setServiceLocation($service_location)
    {
        $this->container['service_location'] = $service_location;

        return $this;
    }

    /**
     * Gets service_teams
     * @return int[]
     */
    public function getServiceTeams()
    {
        return $this->container['service_teams'];
    }

    /**
     * Sets service_teams
     * @param int[] $service_teams
     * @return $this
     */
    public function setServiceTeams($service_teams)
    {
        $this->container['service_teams'] = $service_teams;

        return $this;
    }

    /**
     * Gets time_approver
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberReference
     */
    public function getTimeApprover()
    {
        return $this->container['time_approver'];
    }

    /**
     * Sets time_approver
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberReference $time_approver
     * @return $this
     */
    public function setTimeApprover($time_approver)
    {
        $this->container['time_approver'] = $time_approver;

        return $this;
    }

    /**
     * Gets time_reminder_email_flag
     * @return bool
     */
    public function getTimeReminderEmailFlag()
    {
        return $this->container['time_reminder_email_flag'];
    }

    /**
     * Sets time_reminder_email_flag
     * @param bool $time_reminder_email_flag
     * @return $this
     */
    public function setTimeReminderEmailFlag($time_reminder_email_flag)
    {
        $this->container['time_reminder_email_flag'] = $time_reminder_email_flag;

        return $this;
    }

    /**
     * Gets time_sheet_start_date
     * @return \DateTime
     */
    public function getTimeSheetStartDate()
    {
        return $this->container['time_sheet_start_date'];
    }

    /**
     * Sets time_sheet_start_date
     * @param \DateTime $time_sheet_start_date
     * @return $this
     */
    public function setTimeSheetStartDate($time_sheet_start_date)
    {
        $this->container['time_sheet_start_date'] = $time_sheet_start_date;

        return $this;
    }

    /**
     * Gets time_zone
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\TimeZoneReference
     */
    public function getTimeZone()
    {
        return $this->container['time_zone'];
    }

    /**
     * Sets time_zone
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\TimeZoneReference $time_zone
     * @return $this
     */
    public function setTimeZone($time_zone)
    {
        $this->container['time_zone'] = $time_zone;

        return $this;
    }

    /**
     * Gets title
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     * @param string $title
     * @return $this
     */
    public function setTitle($title)
    {
        if (!is_null($title) && (strlen($title) > 50)) {
            throw new \InvalidArgumentException('invalid length for $title when calling Member., must be smaller than or equal to 50.');
        }

        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets type
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberTypeReference
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\MemberTypeReference $type
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets vendor_number
     * @return string
     */
    public function getVendorNumber()
    {
        return $this->container['vendor_number'];
    }

    /**
     * Sets vendor_number
     * @param string $vendor_number
     * @return $this
     */
    public function setVendorNumber($vendor_number)
    {
        $this->container['vendor_number'] = $vendor_number;

        return $this;
    }

    /**
     * Gets warehouse
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WarehouseReference
     */
    public function getWarehouse()
    {
        return $this->container['warehouse'];
    }

    /**
     * Sets warehouse
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WarehouseReference $warehouse
     * @return $this
     */
    public function setWarehouse($warehouse)
    {
        $this->container['warehouse'] = $warehouse;

        return $this;
    }

    /**
     * Gets warehouse_bin
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WarehouseBinReference
     */
    public function getWarehouseBin()
    {
        return $this->container['warehouse_bin'];
    }

    /**
     * Sets warehouse_bin
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WarehouseBinReference $warehouse_bin
     * @return $this
     */
    public function setWarehouseBin($warehouse_bin)
    {
        $this->container['warehouse_bin'] = $warehouse_bin;

        return $this;
    }

    /**
     * Gets work_role
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WorkRoleReference
     */
    public function getWorkRole()
    {
        return $this->container['work_role'];
    }

    /**
     * Sets work_role
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WorkRoleReference $work_role
     * @return $this
     */
    public function setWorkRole($work_role)
    {
        $this->container['work_role'] = $work_role;

        return $this;
    }

    /**
     * Gets work_type
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WorkTypeReference
     */
    public function getWorkType()
    {
        return $this->container['work_type'];
    }

    /**
     * Sets work_type
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\WorkTypeReference $work_type
     * @return $this
     */
    public function setWorkType($work_type)
    {
        $this->container['work_type'] = $work_type;

        return $this;
    }

    /**
     * Gets _info
     * @return \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\Metadata
     */
    public function getInfo()
    {
        return $this->container['_info'];
    }

    /**
     * Sets _info
     * @param \Spinen\ConnectWise\Clients\System\Spinen\ConnectWise\Clients\System\Model\Metadata $_info Metadata of the entity
     * @return $this
     */
    public function setInfo($_info)
    {
        $this->container['_info'] = $_info;

        return $this;
    }

    /**
     * Gets system_flag
     * @return bool
     */
    public function getSystemFlag()
    {
        return $this->container['system_flag'];
    }

    /**
     * Sets system_flag
     * @param bool $system_flag
     * @return $this
     */
    public function setSystemFlag($system_flag)
    {
        $this->container['system_flag'] = $system_flag;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Spinen\ConnectWise\Clients\System\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Spinen\ConnectWise\Clients\System\ObjectSerializer::sanitizeForSerialization($this));
    }
}


